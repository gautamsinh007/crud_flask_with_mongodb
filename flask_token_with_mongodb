
from flask import Flask, jsonify, request,current_app
from flask_jwt_extended import JWTManager, jwt_required, create_access_token
from pymongo import MongoClient
import certifi
import pymongo
# from functools import wraps
from flask_jwt_extended import jwt_required
# tlsCAFile=certifi.where()  for connnect db

# Making a Connection with MongoClient
client =  pymongo.MongoClient("mongodb+srv://gautamsinh:gau123123@cluster0.2c9i6px.mongodb.net/FixSpaceiz",tlsCAFile=certifi.where())
# database
db = client['FixSpaceiz']
# collection
user = db["userAccount"]

app = Flask(__name__)
app.config["JWT_TOKEN_LOCATION"] = ["headers", "cookies", "json", "query_string"]
app.config["JWT_COOKIE_SECURE"] = False
# JWT Config
app.config["JWT_SECRET_KEY"] = "this-is-secret-key"
jwt = JWTManager(app)


@app.route("/auth")
@jwt_required()
def dasboard():
    return jsonify(message="Welcome! to the Data Science Learner")


@app.route("/register", methods=["POST"])
def register():
   
    # test = User.query.filter_by(email=email).first()
    # test = user.find_one({"email": email})
    data = request.get_json()
   
    first_name = data.get("first_name")
    last_name =  data.get("last_name")
    password =   data.get("password")
    email =   data.get("email")
    # user_info = dict(first_name=first_name, last_name=last_name, email=email, password=password)
    user.insert_one({"first_name":first_name, "last_name":last_name, "email":email, "password":password})
    return jsonify(message="User added sucessfully"), 201


@app.route("/login", methods=["POST"])
def login():
    if request.is_json:
        email = request.json["email"]
        password = request.json["password"]
    else:
        email = request.form["email"]
        password = request.form["password"]

    test = user.find_one({"email": email, "password": password})
    if test:
        access_token = create_access_token(identity=email)
        return jsonify(message="Login Succeeded!", access_token=access_token), 201
    else:
        return jsonify(message="Bad Email or Password"), 401


if __name__ == '__main__':
    app.run(host="localhost", debug=True)
   
